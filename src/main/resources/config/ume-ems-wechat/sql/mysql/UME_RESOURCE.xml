<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.umeframework.auth.uac.entity">
  <!-- UME资源管理表 [UME_RESOURCE] -->
  
  <!-- Insert one -->
  <insert id="UME_RESOURCE_INSERT" parameterType="org.umeframework.auth.uac.entity.UmeResourceDto">
    INSERT INTO UME_RESOURCE (
      RES_ID,
      RES_TYPE,
      RES_NAME,
      RES_GROUP,
      RES_LINK,
      RES_INDEX,
      RES_STATUS,
      CREATE_AUTHOR,
      CREATE_DATETIME,
      UPDATE_AUTHOR,
      UPDATE_DATETIME
    ) VALUES (
      #{resId},
      #{resType},
      #{resName},
      #{resGroup},
      #{resLink},
      #{resIndex},
      #{resStatus},
      #{createAuthor},
      current_timestamp(),
      #{updateAuthor},
      current_timestamp()
    )
  </insert>

  <!-- Update with optimism check) -->
  <update id="UME_RESOURCE_UPDATE" parameterType="org.umeframework.auth.uac.entity.UmeResourceDto">
    UPDATE UME_RESOURCE
    SET
      RES_NAME = #{resName},
      RES_GROUP = #{resGroup},
      RES_LINK = #{resLink},
      RES_INDEX = #{resIndex},
      RES_STATUS = #{resStatus},
      CREATE_AUTHOR = #{createAuthor},
      CREATE_DATETIME = #{createDatetime},
      UPDATE_AUTHOR = #{updateAuthor},
      UPDATE_DATETIME = current_timestamp() 
    WHERE UPDATE_DATETIME = #{updateDatetime}
      AND RES_ID = #{resId}
      AND RES_TYPE = #{resType}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>

  <!-- Smart update -->
  <update id="UME_RESOURCE_SMART_UPDATE" parameterType="org.umeframework.auth.uac.entity.UmeResourceDto">
    UPDATE UME_RESOURCE
    <set>
      <if test="resName!=null">RES_NAME = #{resName},</if>
      <if test="resGroup!=null">RES_GROUP = #{resGroup},</if>
      <if test="resLink!=null">RES_LINK = #{resLink},</if>
      <if test="resIndex!=null">RES_INDEX = #{resIndex},</if>
      <if test="resStatus!=null">RES_STATUS = #{resStatus},</if>
      <if test="createAuthor!=null">CREATE_AUTHOR = #{createAuthor},</if>
      <if test="createDatetime!=null">CREATE_DATETIME = #{createDatetime},</if>
      <if test="updateAuthor!=null">UPDATE_AUTHOR = #{updateAuthor},</if>
      UPDATE_DATETIME = current_timestamp()
    </set>
    WHERE 
       RES_ID = #{resId}
       AND  RES_TYPE = #{resType}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>
  
  <!-- Delete one -->
  <delete id="UME_RESOURCE_DELETE" parameterType="org.umeframework.auth.uac.entity.UmeResourceDto">
    DELETE FROM UME_RESOURCE
    WHERE
      RES_ID = #{resId} AND 
      RES_TYPE = #{resType} 
  </delete>

  <!-- Find by primary key -->
  <select id="UME_RESOURCE_FIND" resultType="org.umeframework.auth.uac.entity.UmeResourceDto">
    SELECT
      RES_ID AS "resId",
      RES_TYPE AS "resType",
      RES_NAME AS "resName",
      RES_GROUP AS "resGroup",
      RES_LINK AS "resLink",
      RES_INDEX AS "resIndex",
      RES_STATUS AS "resStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM UME_RESOURCE
    WHERE
      RES_ID = #{resId} AND 
      RES_TYPE = #{resType} 
  </select>

  <!-- Find by primary key for update with row lock -->
  <select id="UME_RESOURCE_FIND_FOR_UPDATE" resultType="org.umeframework.auth.uac.entity.UmeResourceDto">
    SELECT
      RES_ID AS "resId",
      RES_TYPE AS "resType",
      RES_NAME AS "resName",
      RES_GROUP AS "resGroup",
      RES_LINK AS "resLink",
      RES_INDEX AS "resIndex",
      RES_STATUS AS "resStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM UME_RESOURCE
    WHERE
      RES_ID = #{resId} AND 
      RES_TYPE = #{resType} 
    FOR UPDATE
  </select>

  <!-- Search -->
  <select id="UME_RESOURCE_SEARCH" resultType="org.umeframework.auth.uac.entity.UmeResourceDto">
    SELECT
      RES_ID AS "resId",
      RES_TYPE AS "resType",
      RES_NAME AS "resName",
      RES_GROUP AS "resGroup",
      RES_LINK AS "resLink",
      RES_INDEX AS "resIndex",
      RES_STATUS AS "resStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM UME_RESOURCE
    WHERE 1 = 1 
      <if test="resId != null">AND RES_ID = #{resId}</if>
      <if test="resType != null">AND RES_TYPE = #{resType}</if>
      <if test="resName != null">AND RES_NAME = #{resName}</if>
      <if test="resGroup != null">AND RES_GROUP = #{resGroup}</if>
      <if test="resLink != null">AND RES_LINK = #{resLink}</if>
      <if test="resIndex != null">AND RES_INDEX = #{resIndex}</if>
      <if test="resStatus != null">AND RES_STATUS = #{resStatus}</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR = #{createAuthor}</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR = #{updateAuthor}</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>

  <!-- Like Search -->
  <select id="UME_RESOURCE_LIKE_SEARCH" resultType="org.umeframework.auth.uac.entity.UmeResourceDto">
    SELECT
      RES_ID AS "resId",
      RES_TYPE AS "resType",
      RES_NAME AS "resName",
      RES_GROUP AS "resGroup",
      RES_LINK AS "resLink",
      RES_INDEX AS "resIndex",
      RES_STATUS AS "resStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM UME_RESOURCE
    WHERE 1 = 1 
      <if test="resId != null">AND RES_ID LIKE CONCAT('%', #{resId}, '%')</if>
      <if test="resType != null">AND RES_TYPE LIKE CONCAT('%', #{resType}, '%')</if>
      <if test="resName != null">AND RES_NAME LIKE CONCAT('%', #{resName}, '%')</if>
      <if test="resGroup != null">AND RES_GROUP LIKE CONCAT('%', #{resGroup}, '%')</if>
      <if test="resLink != null">AND RES_LINK LIKE CONCAT('%', #{resLink}, '%')</if>
      <if test="resIndex != null">AND RES_INDEX LIKE CONCAT('%', #{resIndex}, '%')</if>
      <if test="resStatus != null">AND RES_STATUS LIKE CONCAT('%', #{resStatus}, '%')</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR LIKE CONCAT('%', #{createAuthor}, '%')</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR LIKE CONCAT('%', #{updateAuthor}, '%')</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>    
  </select>
  
  <!-- Dynamic Search -->
  <select id="UME_RESOURCE_DYNA_SEARCH" resultType="org.umeframework.auth.uac.entity.UmeResourceDto">
    SELECT
      RES_ID AS "resId",
      RES_TYPE AS "resType",
      RES_NAME AS "resName",
      RES_GROUP AS "resGroup",
      RES_LINK AS "resLink",
      RES_INDEX AS "resIndex",
      RES_STATUS AS "resStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM UME_RESOURCE
    WHERE 1 = 1 
      <if test="resId != null">AND ( ${resId} )</if>
      <if test="resType != null">AND ( ${resType} )</if>
      <if test="resName != null">AND ( ${resName} )</if>
      <if test="resGroup != null">AND ( ${resGroup} )</if>
      <if test="resLink != null">AND ( ${resLink} )</if>
      <if test="resIndex != null">AND ( ${resIndex} )</if>
      <if test="resStatus != null">AND ( ${resStatus} )</if>
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
      <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
      <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>
  
  <!-- Count by input condition -->
  <select id="UME_RESOURCE_COUNT" resultType="java.lang.Integer">
    SELECT count(*)
    FROM UME_RESOURCE
    WHERE 1 = 1 
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="resId != null">AND RES_ID = #{resId}</if>
      <if test="resType != null">AND RES_TYPE = #{resType}</if>
      <if test="resName != null">AND RES_NAME = #{resName}</if>
      <if test="resGroup != null">AND RES_GROUP = #{resGroup}</if>
      <if test="resLink != null">AND RES_LINK = #{resLink}</if>
      <if test="resIndex != null">AND RES_INDEX = #{resIndex}</if>
      <if test="resStatus != null">AND RES_STATUS = #{resStatus}</if>
  </select>

</mapper>

